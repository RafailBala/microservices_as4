version: "3.7"

services:
  kafka1:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=WhZ3xz1UTw6xlMDG1tzUjA
    volumes:
      - ./kafka_data:/bitnami/kafka
  digital-plan-sql-db:
    image: postgres:15.3-alpine
    container_name: microservices-sql-db
    environment:
      POSTGRES_DB: microservices
      POSTGRES_USER: "rafa"
      POSTGRES_PASSWORD: password
      -e POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -D microservices"]
      interval: 5s
      timeout: 2s
      retries: 25
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgres/data/
    command: ["postgres", "-c", "max_connections=400"]
volumes:
  postgres_data: { }

#docker run -e POSTGRES_PASSWORD=password -p 5433:5432 postgres:15.3-alpine